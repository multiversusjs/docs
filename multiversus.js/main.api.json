{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.0",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "multiversus.js!",
  "docComment": "",
  "name": "multiversus.js",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "multiversus.js!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "multiversus.js!CharacterData:class",
          "docComment": "/**\n * Represents character data\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export class CharacterData "
            }
          ],
          "releaseTag": "Public",
          "name": "CharacterData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.AryaStark:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static AryaStark: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "AryaStark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Batman:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Batman: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Batman",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.BugsBunny:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static BugsBunny: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BugsBunny",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Finn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Finn: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Finn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Garnet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Garnet: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Garnet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.HarleyQuinn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static HarleyQuinn: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HarleyQuinn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.IronGiant:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static IronGiant: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "IronGiant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Jake:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Jake: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Jake",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.LeBronJames:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static LeBronJames: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "LeBronJames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Reindog:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Reindog: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Reindog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.RickSanchez:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static RickSanchez: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RickSanchez",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Shaggy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Shaggy: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Shaggy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.StevenUniverse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static StevenUniverse: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "StevenUniverse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Superman:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Superman: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Superman",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Taz:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Taz: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Taz",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.TomAndJerry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static TomAndJerry: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "TomAndJerry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.Velma:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Velma: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Velma",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "multiversus.js!CharacterData.WonderWoman:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static WonderWoman: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\tid: string;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "WonderWoman",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "multiversus.js!Client:class",
          "docComment": "/**\n * The base client for interacting with the MultiVersus API.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export class Client "
            }
          ],
          "releaseTag": "Public",
          "name": "Client",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "multiversus.js!Client:constructor(1)",
              "docComment": "/**\n * Options for the client\n *\n * @param accessToken - Access token of the account to log in with\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(accessToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "accessToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getBattlepass:member(1)",
              "docComment": "/**\n * Fetch users Battlepass.\n *\n * @param id - The ID of the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBattlepass(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getBattlepass"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getClan:member(1)",
              "docComment": "/**\n * Fetch users clan(s).\n *\n * @param id - The ID of the user.\n *\n * @param page - The match page to fetch.\n *\n * @param count - The count to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClan(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", page?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "getClan"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getLeaderboard:member(1)",
              "docComment": "/**\n * Fetch the global leaderboard.\n *\n * @param type - The type of leaderboard to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLeaderboard(type: "
                },
                {
                  "kind": "Reference",
                  "text": "LeaderboardType",
                  "canonicalReference": "multiversus.js!LeaderboardType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getLeaderboard"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getMatch:member(1)",
              "docComment": "/**\n * Fetch a match from an ID.\n *\n * @param id - The ID of the match to fetch\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMatch(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getMatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getMatches:member(1)",
              "docComment": "/**\n * Fetch a page of matches of a user.\n *\n * @param id - The ID of the user.\n *\n * @param page - The match page to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMatches(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", page?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "getMatches"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getProfile:member(1)",
              "docComment": "/**\n * Fetch a profile from an ID.\n *\n * @param id - The ID of the profile to fetch\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProfile(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProfileResponse",
                  "canonicalReference": "multiversus.js!ProfileResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getProfile"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getProfileLeaderboard:member(1)",
              "docComment": "/**\n * Fetch the leaderboard of a user.\n *\n * @param id - The ID of the user.\n *\n * @param type - The leaderboard type to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProfileLeaderboard(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Reference",
                  "text": "LeaderboardType",
                  "canonicalReference": "multiversus.js!LeaderboardType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getProfileLeaderboard"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getProfileLeaderboardForCharacter:member(1)",
              "docComment": "/**\n * Fetch the leaderboard of a user with a character.\n *\n * @param id - The ID of the user.\n *\n * @param type - The leaderboard type to fetch.\n *\n * @param character - The character to fetch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProfileLeaderboardForCharacter(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Reference",
                  "text": "LeaderboardType",
                  "canonicalReference": "multiversus.js!LeaderboardType:type"
                },
                {
                  "kind": "Content",
                  "text": ", character: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "character",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getProfileLeaderboardForCharacter"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#getQuests:member(1)",
              "docComment": "/**\n * Fetch users quests.\n *\n * @param id - The ID of the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getQuests(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getQuests"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#info:member(1)",
              "docComment": "/**\n * Returns info about the current client, including account info, notifications, and WB network status.\n *\n * @param steamTicket - The Steam encrypted application ticket of the account, converted to hex.\n *\n * @returns {Promise<any>}\n *\n * @example\n *\n * client.info();\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info(steamTicket?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "steamTicket",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "info"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#login:member(1)",
              "docComment": "/**\n * Creates an access token, allowing you to access the MultiVersus API.\n *\n * @param username - Username of the account to log in with\n *\n * @param password - Password of the account to log in with\n *\n * @returns {Promise<any>}\n *\n * @example\n *\n * client.login('username', 'password');\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "login(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "login"
            },
            {
              "kind": "Method",
              "canonicalReference": "multiversus.js!Client#searchByUsername:member(1)",
              "docComment": "/**\n * Search for users from a username.\n *\n * @param username - Username to search for\n *\n * @param limit - Limit of users to return.\n *\n * @returns {Promise<searchResponse>}\n *\n * @example\n *\n * client.searchByUsername('ElijahPepe', 10);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "searchByUsername(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "limit",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "searchByUsername"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "multiversus.js!LeaderboardType:type",
          "docComment": "/**\n * Types in a leaderboard\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LeaderboardType = "
            },
            {
              "kind": "Content",
              "text": "'2v2' | '1v1'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LeaderboardType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "multiversus.js!ProfileResponse:type",
          "docComment": "/**\n * API response for requesting a profile\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProfileResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tupdated_at: string;\n\taccount_id: string;\n\tcreated_at: string;\n\tlast_login: string;\n\tdata: {\n\t\tIsChildAccount: boolean;\n\t};\n\tserver_data: {\n\t\tstat_trackers: {\n\t\t\tHighestDamageDealt: number;\n\t\t\tTotalAttacksDodged: number;\n\t\t\tTotalAssists: number;\n\t\t\tTotalRingoutLeader: number;\n\t\t\tTotalRingouts: number;\n\t\t\tTotalWins: number;\n\t\t\tTotalDoubleRingouts: number;\n\t\t};\n\t\tlifetime_damage: number;\n\t\tlifetime_ringouts: number;\n\t\tmatches_played: number;\n\t\tsets_played: number;\n\t};\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ProfileResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "multiversus.js!SearchResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SearchResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tcursor: string;\n\tstart: number;\n\tcount: number;\n\ttotal: number;\n\tresults: "
            },
            {
              "kind": "Reference",
              "text": "SearchResult",
              "canonicalReference": "multiversus.js!SearchResult:type"
            },
            {
              "kind": "Content",
              "text": "[] | [];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SearchResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "multiversus.js!SearchResult:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SearchResult = "
            },
            {
              "kind": "Content",
              "text": "{\n\tscore: null | number;\n\tresult: "
            },
            {
              "kind": "Reference",
              "text": "ProfileResponse",
              "canonicalReference": "multiversus.js!ProfileResponse:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SearchResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        }
      ]
    }
  ]
}
